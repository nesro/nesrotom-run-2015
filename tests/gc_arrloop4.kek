//KEK_TEST_RUNS 2
//KEK_TEST_ARGS_0 300
//KEK_TEST_ARGS_1 1000

// ./compiler/kekc ./tests/gc_arrloop4.kek ./tests/kexes/gc_arrloop4.kexe 
// make -C vm && valgrind --show-leak-kinds=all --leak-check=full --track-origins=yes ./vm/kek -d gc -d gc_stats ./tests/kexes/gc_arrloop4.kexe


class MyObj {
  var v
  var str
  
  MyObj(av) {
    v = av;
    //str = "123 this is a sample string 456"
    str = "12345 abcdefghijklmnopqrstuvwxyz 67890"
  }
  
  val() {
    return v
  }
}

class Main {
  static main(args) {
    var i
    var j
    var r
    var arr

    var cnt = 23
    var repeat = 8
    
    //var cnt = args[1].toInt()
    //var repeat = args[2].toInt()    
        
        
    write "cnt = "
    write cnt
    
    write "repeat = "
    write repeat
    
    var tmp
    
    var another = []
    another[1] = new MyObj(42);


    for (r = 0; r < repeat; r++) {
      write "r = "; write r
        
      tmp = []
      
      for (i = 0; i < cnt; i++) {
        write "writing tmp[i] where i = "; write i
        
        write "tmp[i] = new MyObj(i) begin\n"
        tmp[i] = new MyObj(i)
        write "tmp[i] = new MyObj(i) end\n"
      }
      
      if (another[1].val() != 42) {
        write "fail: another[1].val() should be 42 but is "
        write another[1].val()
        write "eom\n"
        return
      }
            
      for (i = 0; i < cnt; i++) {
        write "checking tmp[i] where i = "; write i
        if (tmp[i].val() != i) {
          write "fail loop\n"
          return
        }
      }
    } // for repeat
    
    write "=== OK ===\n"
  } // main
} // Main
