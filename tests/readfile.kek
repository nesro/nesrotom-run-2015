class TestException : Exception {
	var extra
	TestException(msg) {
		super(msg)
		extra = "Extra TestException info."
	}
}

class Main {
	static nested() {
		throw new TestException("Nested catch error message.")
	}

	static test() {
		try {
			nested()
		}
		catch (e) {
			Sys.out.writeln(e.msg() + "\n")
			if (e.type() == TestException) {
				Sys.out.writeln(e.extra + "\n")
			}
		}
		throw new TestException("Catch error message.")
	}

	static main(args) {
		if (args.length() != 2) {
			write "Please, specify a file to read.\n"
			return
		}

		var a = "Testing context."

		//test() // Uncomment this to get unhandled exception

		try {
			test()
			Sys.out.writeln("Unreached statement.")
		}
		catch (e) {
			Sys.out.writeln(e.msg() + "\n")
			Sys.out.writeln(a + "\n")
		}

		try {
			var f = new File(args[1], "r")
		}
		catch (e) {
			Sys.out.writeln(e.msg())
			return
		}

		while (1) {
			var line = f.readln()
			if (!line) break;
			write line
		}
		f.close()
	}
}
