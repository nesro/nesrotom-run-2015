//#include "class.kek"

class Prime {
	var n, sqrtn
	var isprime, prime, count

	prepare(n, sqrtn) {
		this.n = n
		this.sqrtn = sqrtn
		isprime = []
		var i, j
		for (i = 2; i <= n; i++) isprime[i] = 1

		// The sieve of Eratosthenes
		for (i = 2; i <= sqrtn; i++) {
			if (isprime[i] == 1) {
				j = i * i
				while (j <= n) {
					isprime[j] = 0
					j = j + i
				}
			}
		}

		prime = []
		j = 0
		for (i = 2; i <= n; i++) {
			if (isprime[i] == 1) {
				prime[j] = i
				j = j + 1
			}
		}
		count = j
	}

	print() {
		var i
		for (i = 0; i != count; i++) write prime[i]
	}
}

class Main {
	static main(args) {
		var n, sqrtn
		var prime_gen = new Prime()

		Sys.out.writeln("Enter n:\n")
		n = Sys.in.readln()
		n = n.toInt()

		Sys.out.writeln("Enter sqrt(n):\n")
		sqrtn = Sys.in.readln()
		sqrtn = sqrtn.toInt()

		prime_gen.prepare(n, sqrtn)
		prime_gen.print()
	}
}
