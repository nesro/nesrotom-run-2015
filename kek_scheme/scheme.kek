#include "reader.kek"
#include "parser.kek"

class Scheme {
	static var input
	static var out
	static var rd

	static Scheme() {
		out = Sys.out
	}

	static REPL() {
		var expr
		var env = new Environment()
		while(1) {
			try {
				rd.prompt = "> "
				expr = input.read()
				if (!expr) {
					out.writeln("\n")
					break
				}
				expr = expr.eval(env)
				expr.print(out)
				out.writeln("\n");
			}
			catch (e) {
				switch (e.type()) {
				case ParserError:
					out.writeln(e.msg() + "\n")
				case EnvironmentError:
					out.writeln(e.msg() + e.sym.toString() + "\n")
				default:
					throw e
				}
			}
		}
	}

	static main(args) {
		rd = new Reader(Sys.term)
		input = new Parser(rd)

		REPL()
	}
}
