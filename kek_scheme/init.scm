(define (cadr l) (car (cdr l)))
(define (cddr l) (cdr (cdr l)))
(define (null? a) (eq? a null))
(define (zero? n) (= n 0))
(define (eof-object? a) (null? a))
(define (len a) (if (null? a) 0 (+ 1 (len (cdr a)))))
(define (append a b) (if (null? a) b (cons (car a) (append (cdr a) b))))
(define (fact_t n a) (if (= n 1) a (fact_t (- n 1) (* n a))))
(define (fact n) (fact_t n 1))
